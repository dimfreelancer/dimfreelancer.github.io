'use strict';
/**
 * It will make cats galery card example
 */


 // * сюда вставим наши карточки с котиками
//  const app = document.querySelector('.app');
 const cats = document.getElementById('cats');
 const arch = document.getElementById('arch');

 
class Card {
    constructor(hor, vert) {
            this.hor = hor;
            this.vert = vert;
            this.name = 'Tom Cat';

            this.p_desc = `Это описание ...`;
            this.p_size = `Размер <b>${this.hor}</b> &times; <b>${this.vert}</b>`;
    }
    typeTranslate = {
        'animals': 'Зверушки',
        'arch': 'Архитектуры',
        'nature': 'Природа',
        'people': 'Народ',
        'tech': 'Тек',
        'cat': 'Коте',
        'shecat': 'Кошка',
        'tomcat': 'Кот',
        'dog': 'Собака',
        'birdy': 'Птичка'
    }




    getCard() {
        if (!this.type) {
            this.type = 'cat';
        }
        this.p_desc = `Это описание ${this.typeTranslate[this.type]}`;

        return `
<div class="card">
    <img src="${this.img_src}" class="thumb" alt="${this.name}" title="${this.name}">
    <p class="desc">${this.p_desc}</p>
    <p class="size">${this.p_size}</p>
</div><!-- /.card .generated by CatCard -->
        `;
    }
}
class CatCard extends Card {

    constructor(hor, vert) {
        super(hor, vert);
        // this.type = 'Коты';
        this.placeholder_url = `https://placekitten.com`;
        this.img_src = `${this.placeholder_url}/${this.hor}/${this.vert}`;
    }
}
/*
class CatCard extends Card {
    
    constructor(hor, vert) {
        super(hor, vert);
        // this.hor = hor;
        // this.vert = vert;
        // this.name = 'Tom Cat';
        this.type = 'Коты';
        this.placeholder_url = `https://placekitten.com`;
        this.img_src = `${this.placeholder_url}/${this.hor}/${this.vert}`;
        // this.img_src = `https://placekitten.com/${this.hor}/${this.vert}`;
        // this.p_desc = `Это описание кота`;
        // this.p_size = `Это размер кота: ${this.hor}&times;${this.vert}`;
    }

    //     getCard() {
    //         return `
    // <div class="card">
    //     <img src="${this.img_src}" class="thumb" alt="${this.name}" title="${this.name}">
    //     <p class="desc">${this.p_desc}</p>
    //     <p class="size">${this.p_size}</p>
    // </div><!-- /.card .generated by CatCard -->
    //         `;
    //     }
}
*/

class ArchCard extends Card {
/**
    https://placeimg.com/200/150/animals
    https://placeimg.com/200/150/arch/grayscale
    https://placeimg.com/200/150/nature
    https://placeimg.com/200/150/people/sepia
    https://placeimg.com/200/150/tech
*/

    typeMask = [ 'animals', 'arch', 'nature', 'people', 'tech', 'cat', 'shecat', 'tomcat' ];
    // typeTranslate = {
    //     'animals':'Зверушки',
    //     'arch':'Архитектуры',
    //     'nature':'Природа',
    //     'people':'Народ',
    //     'tech':'Тек',
    //     'cat':'Коте',
    //     'shecat':'Кошка',
    //     'tomcat':'Кот',
    //     'dog':'Собака',
    //     'birdy':'Птичка'
    // }

    getType (typeNumber) {

        return this.typeMask[typeNumber];
    }

    constructor(hor, vert, typeNumber, filter) {
        super(hor, vert)

        // this.type = type;
        this.type = this.getType(typeNumber);
        this.filter = filter;

        // this.type = 'Архитектуры';
        this.url = `https://placeimg.com`;

        if (this.type) {
            console.log('TYPE: ', this.type);
            this.img_src = `${this.url}/${this.hor}/${this.vert}/${this.type}`;
        } else {
            console.log('ANY');
            this.img_src = `${this.url}/${this.hor}/${this.vert}`;
        }
    }
}



const getRandomInt = Max => Math.floor(Math.random() * Max);


for (let i=0; i<25; i++) {

    let caty3 = new CatCard(160+getRandomInt(50), 100+getRandomInt(50));
    cats.insertAdjacentHTML('afterbegin', caty3.getCard());
    console.log(caty3.getCard());
}
 
for (let i=0; i<25; i++) {

    let archy = new ArchCard(160+getRandomInt(50), 100+getRandomInt(50), 2);
    arch.insertAdjacentHTML('afterbegin', archy.getCard());
    console.log(archy.getCard());
}
 
